- name: Provision ec2 instances based on the environment
  hosts: localhost
  connection: local
  gather_facts: True

  vars_files:
    - ~/ansible/roles/ec2/vars/aws_creds.yml
  vars:
    instance_type: t2.micro
    security_group: sg-04f8a0a2b8893f983
    subnet_id: subnet-00d6dc3b42d57fa0d
    image: ami-0024a0637256e4d4f
    keypair: svk-keypair-f5
    region: ap-southeast-2
    count: 1
    tag_purpose: api_server


  tasks:
    - name: Launch the new EC2 Instance
      ec2:
        aws_access_key: "{{ ec2_access_key }}"
        aws_secret_key: "{{ ec2_secret_key }}"
        instance_type: "{{ instance_type }}"
        image: "{{ image }}"
        wait: true
        region: "{{ region }}"
        keypair: "{{ keypair }}"
        count: "{{count}}"
        instance_tags: '{"owner":"svk"}'
        instance_initiated_shutdown_behavior: terminate
        vpc_subnet_id: "{{ subnet_id }}"
      register: ec2
    - name: add tags
      ec2_tag:
        aws_access_key: "{{ ec2_access_key }}"
        aws_secret_key: "{{ ec2_secret_key }}"
        resource: "{{ ec2.instance_ids[0] }}"
        state: present
        tags:
         purpose: "{{ tag_purpose }}" 
    - debug: var=ec2.instances[0].public_ip
    - name: Wait for machines to come up completely
      wait_for: host={{ item.public_ip }} port=22
      with_items: '{{ec2.instances}}'
    - name: ping to get facts
      ping:
