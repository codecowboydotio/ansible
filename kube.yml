- hosts: "{{ target_hosts | default('kube') }}"
  gather_facts: yes
  tasks:
  - name: install curl and apt transport-https
    package:
      name: "{{ item }}"
      state: present
    with_items:
      - curl
      - apt-transport-https
  - name: set up repositories
    shell: curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
  - name: set up repositories
    shell: echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
  - name:  Do update
    shell: apt update
  - name: install packages
    package:
      name: "{{ item }}"
    loop:
      - vim
      - git
      - curl
      - wget
      - kubelet
      - kubeadm
      - kubectl
  - name: disable swap
    shell: sudo sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab
  - name: disable swap2
    shell: sudo swapoff -a


  - name: configure sysctl
    shell: "{{ item }}"
    loop:
     - sudo modprobe overlay
     - sudo modprobe br_netfilter
     - echo "net.bridge.bridge-nf-call-ip6tables = 1" >> /etc/sysctl.d/kubernetes.conf
     - echo "net.bridge.bridge-nf-call-iptables = 1" >> /etc/sysctl.d/kubernetes.conf
     - echo "net.ipv4.ip_forward = 1" >> /etc/sysctl.d/kubernetes.conf
     - sudo sysctl --system

  - name: Install docker runtime
    shell: "{{ item }}"
    loop:
     - sudo apt update
     - sudo apt install -y curl gnupg2 software-properties-common apt-transport-https ca-certificates
     - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
     - sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
     - sudo apt update
     - sudo apt install -y containerd.io docker-ce docker-ce-cli
     - sudo mkdir -p /etc/systemd/system/docker.service.d
  - name: create config file for docker
    copy:
      dest: /etc/docker/daemon.json
      content: | 
        {
          "exec-opts": ["native.cgroupdriver=systemd"],
          "log-driver": "json-file",
          "log-opts": {
            "max-size": "100m"
          },
        "storage-driver": "overlay2"
        }
  - name: restart services
    shell: "{{ item }}"
    loop:
      - sudo systemctl daemon-reload 
      - sudo systemctl restart docker
      - sudo systemctl enable docker
